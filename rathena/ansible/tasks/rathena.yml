- name: Set rAthena Ansible facts
  ansible.builtin.set_fact:
    rathena_install_dir: "/opt/rathena"
    rathena_renewal_server: true
    rathena_common_sql_files:
      - main.sql
      - web.sql
      - roulette_default_data.sql
      - logs.sql
    rathena_pre_renewal_sql_files:
      - item_db.sql
      - item_db_equip.sql
      - item_db_etc.sql
      - item_db2.sql
      - item_db_usable.sql
      - mob_db.sql
      - mob_db2.sql
      - mob_skill_db.sql
      - mob_skill_db2.sql
    rathena_renewal_sql_files:
      - item_db_re.sql
      - item_db_re_equip.sql
      - item_db_re_etc.sql
      - item_db_re_usable.sql
      - item_db2_re.sql
      - mob_db_re.sql
      - mob_db2_re.sql
      - mob_skill_db_re.sql
      - mob_skill_db2_re.sql
  tags:
    - rathena_facts

- name: Clone rAthena repository
  ansible.builtin.git:
    repo: "https://github.com/rathena/rathena.git"
    dest: "{{ rathena_install_dir }}"
  tags:
    - rathena_clone

- name: Import rAthena MySQL files - Renewal
  when: rathena_renewal_server
  community.mysql.mysql_db:
    chdir: "{{ rathena_install_dir }}/sql-files"
    db: "ragnarok"
    login_host: "127.0.0.1"
    login_user: "ragnarok"
    login_password: "ragnarok"
    state: "import"
    target: "{{ item }}"
  loop: "{{ rathena_common_sql_files + rathena_renewal_sql_files }}"
  tags:
    - rathena_import_sql_files

- name: Import rAthena MySQL files - Pre-Renewal
  when: not rathena_renewal_server
  community.mysql.mysql_db:
    chdir: "{{ rathena_install_dir }}/sql-files"
    db: "ragnarok"
    login_host: "127.0.0.1"
    login_user: "ragnarok"
    login_password: "ragnarok"
    state: "import"
    target: "{{ item }}"
  loop: "{{ rathena_common_sql_files + rathena_pre_renewal_sql_files }}"
  tags:
    - rathena_import_sql_files

- name: Run configure for rAthena repository
  ansible.builtin.command:
    chdir: "{{ rathena_install_dir }}"
    cmd: "./configure"
    creates: "config.status"
  tags:
    - rathena_configure

- name: Run 'make server' for rAthena repository
  ansible.builtin.command:
    chdir: "{{ rathena_install_dir }}"
    argv:
      - "make"
      - "server"
    creates: "login-server"
  tags:
    - rathena_make

- name: Install rAthena Char Server systemd unit
  become: true
  ansible.builtin.template:
    backup: true
    dest: "/etc/systemd/system/rathena_char_server.service"
    src: "templates/rathena_server.service.j2"
    mode: "0644"
  vars:
    binary_name: "char-server"
  tags:
    - rathena_install_char_server_systemd_unit
    - rathena_install_systemd_units

- name: Install rAthena Login Server systemd unit
  become: true
  ansible.builtin.template:
    backup: true
    dest: "/etc/systemd/system/rathena_login_server.service"
    src: "templates/rathena_server.service.j2"
    mode: "0644"
  vars:
    binary_name: "login-server"
  tags:
    - rathena_install_login_server_systemd_unit
    - rathena_install_systemd_units

- name: Install rAthena Map Server systemd unit
  become: true
  ansible.builtin.template:
    backup: true
    dest: "/etc/systemd/system/rathena_map_server.service"
    src: "templates/rathena_server.service.j2"
    mode: "0644"
  vars:
    binary_name: "map-server"
  tags:
    - rathena_install_map_server_systemd_unit
    - rathena_install_systemd_units

- name: Install rAthena Web Server systemd unit
  become: true
  ansible.builtin.template:
    backup: true
    dest: "/etc/systemd/system/rathena_web_server.service"
    src: "templates/rathena_server.service.j2"
    mode: "0644"
  vars:
    binary_name: "web-server"
  tags:
    - rathena_install_web_server_systemd_unit
    - rathena_install_systemd_units

- name: Enable and start rAthena systemd units
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    enabled: true
    name: "{{ item }}"
    state: "started"
  loop:
    - "char-server"
    - "login-server"
    - "map-server"
    - "web-server"
  tags:
    - rathena_start_enable_systemd_unit
    - rathena_install_systemd_units
